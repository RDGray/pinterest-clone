{"version":3,"sources":["all.js","main.js","modal-and-pin.js","modal.js","pin_script.js"],"names":["msg","document","querySelector","icon_click","toggleBotMenu","classList","contains","remove","add","addEventListener","account_button","account_menu","add_pin_modal","close_modal_click","reset_modal","modals_pin","style","display","opacity","pointerEvents","children","removeChild","value","pin_image_blob","create_pin","pin_details","new_pin","createElement","new_image","Image","src","img_blob","onload","innerHTML","concat","title","destination","appendChild","height","console","log","getBoundingClientRect","width","parentElement","event","target","files","test","type","reader","FileReader","result","readAsDataURL","author","board","description","pin_size"],"mappings":"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","file":"all.js","sourcesContent":[null,"let msg = document.querySelector(\".add-pin__msg\");\r\nlet icon_click = document.querySelector(\".add-pin__image-btn\");\r\n\r\nfunction toggleBotMenu() {\r\n  if (msg.classList.contains(\"menuOff\")) {\r\n    msg.classList.remove(\"menuOff\");\r\n    msg.classList.add(\"menuOn\");\r\n  } else {\r\n    msg.classList.remove(\"menuOn\");\r\n    msg.classList.add(\"menuOff\");\r\n  }\r\n}\r\n\r\ndocument\r\n  .querySelector(\".add-pin__upload-pin-create\")\r\n  .addEventListener(\"click\", () => {\r\n    msg.classList.add(\"menuOff\");\r\n    msg.classList.remove(\"menuOn\");\r\n  });\r\n\r\n//account window\r\nconst account_button = document.querySelector(\".nav__account\");\r\nconst account_menu = document.querySelector(\"#account\");\r\n\r\naccount_button.addEventListener(\"click\", () => {\r\n  if (account_menu.classList.contains(\"menuOff\")) {\r\n    account_menu.classList.remove(\"menuOff\");\r\n    account_menu.classList.add(\"menuOn\");\r\n  } else {\r\n    account_menu.classList.remove(\"menuOn\");\r\n    account_menu.classList.add(\"menuOff\");\r\n  }\r\n});\r\n","const add_pin_modal = document.querySelector(\".main\");\r\nconst close_modal_click = document.querySelector(\".card-container\");\r\ndocument\r\n  .querySelector(\".add-pin__upload-pin-create\")\r\n  .addEventListener(\"click\", () => {\r\n    add_pin_modal.style.display = \"block\"; //\r\n    add_pin_modal.style.opacity = 1;\r\n    add_pin_modal.style.pointerEvents = \"all\";\r\n  });\r\n\r\ndocument.querySelector(\".main\").addEventListener(\"click\", (event) => {\r\n  if (\r\n    event.target === close_modal_click ||\r\n    event.target === add_pin_modal ||\r\n    event.target === document\r\n  ) {\r\n    reset_modal();\r\n  }\r\n});\r\n\r\n// reset the content in the modal\r\nfunction reset_modal() {\r\n  const modals_pin = document.querySelector(\".left-side__image-container\");\r\n\r\n  document.querySelector(\"#upload_image_label\").style.display = \"block\";\r\n  modals_pin.style.display = \"none\";\r\n  modals_pin.style.opacity = 0;\r\n\r\n  add_pin_modal.style.display = \"none\"; //\r\n  add_pin_modal.style.opacity = 0;\r\n  add_pin_modal.style.pointerEvents = \"none\";\r\n\r\n  if (modals_pin.children[0].children[0]) {\r\n    modals_pin.children[0].removeChild(modals_pin.children[0].children[0]);\r\n\r\n    document.querySelector(\"#pin_title\").value = \"\";\r\n    document.querySelector(\"#pin_description\").value = \"\";\r\n    document.querySelector(\"#pin_destination\").value = \"\";\r\n    document.querySelector(\"#pin_size\").value = \"\";\r\n    pin_image_blob = null;\r\n  }\r\n}\r\n\r\n//let pin_image_blob = null;\r\n\r\n//----------------add image functionality for image add modal----------------\\\\\r\n\r\ndocument.querySelector(\"#upload_img\").addEventListener(\"change\", (event) => {\r\n  if (event.target.files && event.target.files[0]) {\r\n    //check the type of the input to load\r\n    if (/image\\/*/.test(event.target.files[0].type)) {\r\n      const reader = new FileReader();\r\n      //where the image will be sent to\r\n      reader.onload = function () {\r\n        const new_image = new Image();\r\n\r\n        new_image.src = reader.result;\r\n        pin_image_blob = reader.result;\r\n\r\n        new_image.onload = function () {\r\n          const modals_pin = document.querySelector(\r\n            \".left-side__image-container\"\r\n          );\r\n\r\n          new_image.classList.add(\"pin_max_width\");\r\n\r\n          document\r\n            .querySelector(\".left-side__image-inner\")\r\n            .appendChild(new_image);\r\n\r\n          document.querySelector(\"#upload_image_label\").style.display = \"none\";\r\n\r\n          modals_pin.style.display = \"block\";\r\n\r\n          if (\r\n            new_image.getBoundingClientRect().width <\r\n              new_image.parentElement.getBoundingClientRect().width ||\r\n            new_image.getBoundingClientRect().height <\r\n              new_image.parentElement.getBoundingClientRect().height\r\n          ) {\r\n            new_image.classList.remove(\"pin_max_width\");\r\n            new_image.classList.add(\"pin_max_height\");\r\n          }\r\n\r\n          modals_pin.style.opacity = 1;\r\n        };\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  document.querySelector(\"#upload_img\").value = \"\";\r\n});\r\n\r\n// Save the data info\r\n\r\ndocument.querySelector(\".add__save\").addEventListener(\"click\", () => {\r\n  const users_data = {\r\n    author: \"Jack\",\r\n    board: \"default\",\r\n    title: document.querySelector(\"#pin_title\").value,\r\n    description: document.querySelector(\"#pin_description\").value,\r\n    destination: document.querySelector(\"#pin_destination\").value,\r\n    img_blob: pin_image_blob,\r\n    pin_size: document.querySelector(\"#pin_size\").value,\r\n  };\r\n  create_pin(users_data);\r\n  reset_modal();\r\n});\r\n\r\n//create and save the pin\r\n\r\nfunction create_pin(pin_details) {\r\n  const new_pin = document.createElement(\"div\");\r\n  const new_image = new Image();\r\n\r\n  new_image.src = pin_details.img_blob;\r\n  new_pin.style.opacity = 0;\r\n\r\n  new_image.onload = function () {\r\n    new_pin.classList.add(\"card\");\r\n\r\n    //new_pin.classList.add(\"card--large\");\r\n\r\n    new_image.classList.add(\"pin_max_width\");\r\n\r\n    new_pin.innerHTML = `\r\n    <div class=\"card__title\">${pin_details.title}</div>\r\n\r\n    <div class=\"modal\">\r\n\r\n        <div class=\"modal__head\">\r\n            <div class=\"modal__profile\"> Profile <i class=\"fas fa-chevron-down modal__profile-icon\"></i></div>\r\n            <button type=\"button\" class=\"modal__save\">\r\n                <div class=\"modal__save-inner\">Save</div>\r\n            </button>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal__foot\">\r\n\r\n            <div class=\"modal__destination \">\r\n\r\n                <div class=\"modal__mock-icon-container trim-text\">\r\n                    <i class=\"fas fa-chevron-right modal__mock-icon\"></i>\r\n\r\n                    <div class=\"modal__mock-text trim-text\">${pin_details.destination}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal__social\">\r\n\r\n                <div class=\"modal__mock-icon-container\">\r\n                    <i class=\"far fa-share-square card__mock-icon\"></i>\r\n                </div>\r\n\r\n\r\n                <div class=\"modal__mock-icon-container\">\r\n                    <i class=\"fas fa-ellipsis-h card__mock-icon\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card__image-container\">\r\n        \r\n    </div>\r\n    \r\n    `;\r\n\r\n    document.querySelector(\".pin__container\").appendChild(new_pin);\r\n    new_pin.children[2].appendChild(new_image);\r\n\r\n    if (new_image.height >= 450) {\r\n      new_pin.classList.add(\"card--large\");\r\n    } else if (new_image.height >= 330 && new_image.height < 450) {\r\n      new_pin.classList.add(\"card--medium\");\r\n    } else if (new_image.height < 170) {\r\n      new_pin.classList.add(\"card--xsmall\");\r\n    } else if (new_image.height < 130) {\r\n      new_pin.classList.add(\"card--xxsmall\");\r\n    } else {\r\n      new_pin.classList.add(\"card--small\");\r\n    }\r\n\r\n    console.log(new_image.height);\r\n\r\n    if (\r\n      new_image.getBoundingClientRect().width <\r\n        new_image.parentElement.getBoundingClientRect().width ||\r\n      new_image.getBoundingClientRect().height <\r\n        new_image.parentElement.getBoundingClientRect().height\r\n    ) {\r\n      new_image.classList.remove(\"pin_max_width\");\r\n      new_image.classList.add(\"pin_max_height\");\r\n    }\r\n    new_pin.style.opacity = 1;\r\n  };\r\n}\r\n","let pin_image_blob = null;\r\n\r\n//----------------add image functionality for image add modal----------------\\\\\r\n\r\ndocument.querySelector(\"#upload_img\").addEventListener(\"change\", (event) => {\r\n  if (event.target.files && event.target.files[0]) {\r\n    //check the type of the input to load\r\n    if (/image\\/*/.test(event.target.files[0].type)) {\r\n      const reader = new FileReader();\r\n      //where the image will be sent to\r\n      reader.onload = function () {\r\n        const new_image = new Image();\r\n\r\n        new_image.src = reader.result;\r\n        pin_image_blob = reader.result;\r\n\r\n        new_image.onload = function () {\r\n          const modals_pin = document.querySelector(\r\n            \".left-side__image-container\"\r\n          );\r\n\r\n          new_image.classList.add(\"pin_max_width\");\r\n\r\n          document\r\n            .querySelector(\".left-side__image-inner\")\r\n            .appendChild(new_image);\r\n\r\n          document.querySelector(\"#upload_image_label\").style.display = \"none\";\r\n\r\n          modals_pin.style.display = \"block\";\r\n\r\n          if (\r\n            new_image.getBoundingClientRect().width <\r\n              new_image.parentElement.getBoundingClientRect().width ||\r\n            new_image.getBoundingClientRect().height <\r\n              new_image.parentElement.getBoundingClientRect().height\r\n          ) {\r\n            new_image.classList.remove(\"pin_max_width\");\r\n            new_image.classList.add(\"pin_max_height\");\r\n          }\r\n\r\n          modals_pin.style.opacity = 1;\r\n        };\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  document.querySelector(\"#upload_img\").value = \"\";\r\n});\r\n\r\n// Save the data info\r\n\r\ndocument.querySelector(\".add__save\").addEventListener(\"click\", () => {\r\n  const users_data = {\r\n    author: \"Jack\",\r\n    board: \"default\",\r\n    title: document.querySelector(\"#pin_title\").value,\r\n    description: document.querySelector(\"#pin_description\").value,\r\n    destination: document.querySelector(\"#pin_destination\").value,\r\n    img_blob: pin_image_blob,\r\n    pin_size: document.querySelector(\"#pin_size\").value,\r\n  };\r\n});\r\n","//----------------add image functionality----------------\\\\\r\n\r\ndocument.querySelector(\"#picture\").addEventListener(\"change\", (event) => {\r\n  if (event.target.files && event.target.files[0]) {\r\n    //check the type of the input to load\r\n    if (/image\\/*/.test(event.target.files[0].type)) {\r\n      const reader = new FileReader();\r\n      //where the image will be sent to\r\n      reader.onload = function () {\r\n        document.querySelector(\".card__image\").src = reader.result;\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  document.querySelector(\"#picture\").value = \"\";\r\n});\r\n"]}